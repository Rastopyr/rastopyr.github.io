define("rastopyr-github/app",["exports","ember","ember/resolver","ember/load-initializers","rastopyr-github/config/environment"],function(e,t,r,a,n){"use strict";t["default"].MODEL_FACTORY_INJECTIONS=!0;var i=t["default"].Application.extend({modulePrefix:n["default"].modulePrefix,podModulePrefix:n["default"].podModulePrefix,Resolver:r["default"]});a["default"](i,n["default"].modulePrefix),e["default"]=i}),define("rastopyr-github/initializers/app-version",["exports","rastopyr-github/config/environment","ember"],function(e,t,r){"use strict";var a=r["default"].String.classify;e["default"]={name:"App Version",initialize:function(e,n){var i=a(n.toString());r["default"].libraries.register(i,t["default"].APP.version)}}}),define("rastopyr-github/initializers/export-application-global",["exports","ember","rastopyr-github/config/environment"],function(e,t,r){"use strict";function a(e,a){var n=t["default"].String.classify(r["default"].modulePrefix);r["default"].exportApplicationGlobal&&!window[n]&&(window[n]=a)}e.initialize=a,e["default"]={name:"export-application-global",initialize:a}}),define("rastopyr-github/router",["exports","ember","rastopyr-github/config/environment"],function(e,t,r){"use strict";var a=t["default"].Router.extend({location:r["default"].locationType});a.map(function(){this.route("testgh")}),e["default"]=a}),define("rastopyr-github/templates/application",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){var e=function(){return{isHTMLBars:!0,blockParams:0,cachedFragment:null,hasRendered:!1,build:function(e){var t=e.createTextNode("      testgh\n");return t},render:function(e,t,r){var a=t.dom;a.detectNamespace(r);var n;return t.useFragmentCache&&a.canClone?(null===this.cachedFragment&&(n=this.build(a),this.hasRendered?this.cachedFragment=n:this.hasRendered=!0),this.cachedFragment&&(n=a.cloneNode(this.cachedFragment,!0))):n=this.build(a),n}}}();return{isHTMLBars:!0,blockParams:0,cachedFragment:null,hasRendered:!1,build:function(e){var t=e.createDocumentFragment(),r=e.createElement("h2");e.setAttribute(r,"id","title");var a=e.createTextNode("Welcome to Ember.js");e.appendChild(r,a),e.appendChild(t,r);var r=e.createTextNode("\n\n");e.appendChild(t,r);var r=e.createElement("ul"),a=e.createTextNode("\n  ");e.appendChild(r,a);var a=e.createElement("li"),n=e.createTextNode("\n");e.appendChild(a,n);var n=e.createTextNode("  ");e.appendChild(a,n),e.appendChild(r,a);var a=e.createTextNode("\n");e.appendChild(r,a),e.appendChild(t,r);var r=e.createTextNode("\n\n");e.appendChild(t,r);var r=e.createTextNode("\n");return e.appendChild(t,r),t},render:function(t,r,a){var n=r.dom,i=r.hooks,d=i.block,o=i.content;n.detectNamespace(a);var l;r.useFragmentCache&&n.canClone?(null===this.cachedFragment&&(l=this.build(n),this.hasRendered?this.cachedFragment=l:this.hasRendered=!0),this.cachedFragment&&(l=n.cloneNode(this.cachedFragment,!0))):l=this.build(n);var c=n.createMorphAt(n.childAt(l,[2,1]),0,1),s=n.createMorphAt(l,3,4,a);return d(r,c,t,"link-to",["testgh"],{},e,null),o(r,s,t,"outlet"),l}}}())}),define("rastopyr-github/templates/testgh",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){return{isHTMLBars:!0,blockParams:0,cachedFragment:null,hasRendered:!1,build:function(e){var t=e.createDocumentFragment(),r=e.createElement("h2"),a=e.createTextNode("hello user");e.appendChild(r,a),e.appendChild(t,r);var r=e.createTextNode("\n");e.appendChild(t,r);var r=e.createElement("p"),a=e.createTextNode("testgh");return e.appendChild(r,a),e.appendChild(t,r),t},render:function(e,t,r){var a=t.dom;a.detectNamespace(r);var n;return t.useFragmentCache&&a.canClone?(null===this.cachedFragment&&(n=this.build(a),this.hasRendered?this.cachedFragment=n:this.hasRendered=!0),this.cachedFragment&&(n=a.cloneNode(this.cachedFragment,!0))):n=this.build(a),n}}}())}),define("rastopyr-github/config/environment",["ember"],function(e){var t="rastopyr-github";try{var r=t+"/config/environment",a=e["default"].$('meta[name="'+r+'"]').attr("content"),n=JSON.parse(unescape(a));return{"default":n}}catch(i){throw new Error('Could not read config from meta tag with name "'+r+'".')}}),runningTests?require("rastopyr-github/tests/test-helper"):require("rastopyr-github/app")["default"].create({name:"rastopyr-github",version:"0.0.0.04619c43"});